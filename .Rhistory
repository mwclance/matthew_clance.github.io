rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
git add/rm cv.html
git add cv.html
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
library(vscDebugger)
devtools::install_github("ManuelHentschel/vscDebugger")
library(vscDebugger)
install.packages("httpgd")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rm(list = ls())
options(warn=-1)
library(glmhdfe)
library(alpaca)
library(haven)
library(fixest)
library(readstata13)
library(R.matlab)
library(dplyr)
library(pracma)
library(abind)
setwd("D:/Quantile Trade/Arellano and Bonhomme")
#Load Data
data <- readMat("data_qpanel.mat")
data <- data.frame(data)
data <- data %>%
rename(
Bw = data.qpanel.1,
Smoke = data.qpanel.2,
Age = data.qpanel.3,
Male = data.qpanel.4
)
data$Bw <- log(data$Bw)
#Define variables
Bw=data[,1]
Smoke=data[,2]
Age=data[,3]
Male=data[,4]
T=3
N=length(Bw)/T
data$id=rep(rep(1:N,each=3),1)
data$time=seq(1, 3)
# Regressors
Kx=3
# demean covariates
data <- data %>%
group_by(time) %>%
mutate(across(c("Bw", "Smoke", "Age", "Male"), ~ .x - mean(.x), .names = "tdm_{col}"))
sumX <- data %>%
group_by(id) %>%
summarise_at(vars(tdm_Smoke, tdm_Age, tdm_Male), sum)
#array(data_inputs,dim=c(no of rows, no of cols, no of arrays)
Y <- array(c(data$tdm_Bw), dim=c(N,3,1))
Y <- matrix(Y,3)
Y <- t(Y)
X1 <- array(c(data$tdm_Smoke), dim=c(N,1,3))
X1 <- matrix(X1,3)
X1 <- t(X1)
X2 <- array(c(data$tdm_Age), dim=c(N,1,3))
X2 <- matrix(X2,3)
X2 <- t(X2)
X3 <- array(c(data$tdm_Male), dim=c(N,1,3))
X3 <- matrix(X3,3)
X3 <- t(X3)
Xc1 = array(c(X1[,1],X2[,1],X3[,1]), dim=c(N,1,3))
Xc2 = array(c(X1[,2],X2[,2],X3[,2]), dim=c(N,1,3))
Xc3 = array(c(X1[,3],X2[,3],X3[,3]), dim=c(N,1,3))
X = array(c(Xc1,Xc2,Xc3), dim=c(N,3,3))
sumX <- array(c(sumX$tdm_Smoke, sumX$tdm_Age, sumX$tdm_Male), dim=c(N,3,1))
sumX <- data.frame(sumX)
sumX<- as.matrix(sumX)
Xbar <- sumX/T
# Maximum iteration
maxiter=100
# Number of draws within the chain.
draws=200
# Number of draws kept for computation.
Mdraws=1
# define useful vectors
ones<-matrix(Mdraws, 1, 1)
Ytot<-kron(ones,Y)
dim(Ytot) <- c(N*3 , 1)
Xtot <- kron(ones,X)
Xtot1 <- c(Xtot[,1,1],Xtot[,1,2],Xtot[,1,3])
Xtot2 <- c(Xtot[,2,1],Xtot[,2,2],Xtot[,2,3])
Xtot3 <- c(Xtot[,3,1],Xtot[,3,2],Xtot[,3,3])
Xtot <- cbind(Xtot1,Xtot2,Xtot3)
as.matrix(Xtot)
Xbartot=kron(ones,Xbar)
# variance Random Walk proposals
var_prop=.05
# Grid of tau's
Ntau = 21
Vectau=matrix(0,21,1)
t=1
while (t < 22 ) {
Vectau[t,1]=(t/(Ntau+1))
t=t+1
}
#############
#Estimation##
#############
count=1
deltapar=1
#Initial conditions
Resqinit=matrix(0, Kx+2, Ntau)
for (jtau in 1:Ntau) {
tau=Vectau(jtau)
beta1=rq(X,Y,tau)
Resqinit(1:Kx+1,jtau)=beta1
Resqinit(Kx+2,jtau)=1  #Arbitrary Initial value
}
Vectau(1)
Vectau[1]
Resqinit=matrix(0, Kx+2, Ntau)
for (jtau in 1:Ntau) {
tau=Vectau[jtau]
beta1=rq(X,Y,tau)
Resqinit[1:Kx+1,jtau]=beta1
Resqinit[Kx+2,jtau]=1  #Arbitrary Initial value
}
library(quantreg)
Resqinit=matrix(0, Kx+2, Ntau)
for (jtau in 1:Ntau) {
tau=Vectau[jtau]
beta1=rq(X,Y,tau)
Resqinit[1:Kx+1,jtau]=beta1
Resqinit[Kx+2,jtau]=1  #Arbitrary Initial value
}
beta1=rq(X,Y,0.04545455)
count=1
deltapar=1
#Initial conditions
Resqinit=matrix(0, Kx+2, Ntau)
for (jtau in 1:Ntau) {
tau=Vectau[jtau]
beta1=rq(Xc1,Y[,1],tau)
Resqinit[1:Kx+1,jtau]=beta1
Resqinit[Kx+2,jtau]=1  #Arbitrary Initial value
}
Ytt<-Y[,1]
View(Y)
beta1=rq(Xc1,Ytt,.5)
beta1=rq(Ytt ~ Xc1,.5)
beta1=rq(Ytt ~ Xc1,.5,na.action = na.omit)
beta1=rq(Ytt ~ Xc1[,1,1],.5,na.action = na.omit)
View(beta1)
beta1=rq(Y ~ Xc1[,,1],.5,na.action = na.omit)
beta1=rq(Y ~ X[,,1],.5,na.action = na.omit)
beta1=rq(Y ~ X[,1,],.5,na.action = na.omit)
beta1=rq(Y[,1] ~ X[,1,],.5,na.action = na.omit)
beta1=rq(Y[,1] ~ X[,,1],.5,na.action = na.omit)
beta1=rq(Y[,1] ~ X[,,1],.5)
Resqinit=matrix(0, Kx+2, Ntau)
for (jtau in 1:Ntau) {
tau=Vectau[jtau]
beta1=rq(Y[,1] ~ X[,,1],.5)
Resqinit[1:Kx+1,jtau]=beta1
Resqinit[Kx+2,jtau]=1  #Arbitrary Initial value
}
View(beta1)
beta1=rq(Y[,1] ~ X[,,1],.0455)
count=1
deltapar=1
#Initial conditions
Resqinit=matrix(0, Kx+2, Ntau)
for (jtau in 1:Ntau) {
tau=Vectau[jtau]
beta1=rq(Y[,1] ~ X[,,1],.5)
Resqinit[1:Kx+1,jtau]=beta1$coefficients
Resqinit[Kx+2,jtau]=1  #Arbitrary Initial value
}
Resqinit[1:Kx+1,1]
Resqinit=matrix(0, Kx+2, Ntau)
Resqinit[1:Kx+1,1]
Kx+2
Resqinit=matrix(0, 3+2, Ntau)
Resqinit=matrix(0, 'Kx'+2, Ntau)
Resqinit=matrix(0, "Kx"+2, Ntau)
Resqinit=matrix(0, Kx+2, Ntau)
Resqinit=matrix(0, Kx+2, Ntau)
for (jtau in 1:Ntau) {
tau=Vectau[jtau]
beta1=rq(Y[,1] ~ X[,,1],.5)
Resqinit[1:Kx+1,jtau]=beta1$coefficients
Resqinit[Kx+2,jtau]=1  #Arbitrary Initial value
}
Resqinit=matrix(0, Kx+2, Ntau)
for (jtau in 1:Ntau) {
tau=Vectau[jtau]
beta1=rq(Y[,1] ~ X[,,1],.5)
Resqinit[1:Kx+1,jtau]=beta1$coefficients[1:4]
Resqinit[Kx+2,jtau]=1  #Arbitrary Initial value
}
Resqinit[1:4,1]=beta1$coefficients
View(Resqinit)
Resqinit[1:'Kx'+1,1]=beta1$coefficients
Resqinit[,1]=beta1$coefficients
Resqinit[1:Kx+1,1]
Resqinit[1: Kx+1,1]
Resqinit[1:4,1]
View(Resqinit)
get(Kx)
Resqinit[1:'Kx+1',1]
Resqinit[1:Kx+1,1]
Resqinit[1:(Kx+1),1]
Resqinit=matrix(0, Kx+2, Ntau)
for (jtau in 1:Ntau) {
tau=Vectau[jtau]
beta1=rq(Y[,1] ~ X[,,1],tau)
Resqinit[1:(Kx+1),1]=beta1$coefficients
Resqinit[(Kx+2),jtau]=1  #Arbitrary Initial value
}
View(Resqinit)
Resqinit=matrix(0, Kx+2, Ntau)
for (jtau in 1:Ntau) {
tau=Vectau[jtau]
beta1=rq(Y[,1] ~ X[,,1],tau)
Resqinit[1:(Kx+1),jtau]=beta1$coefficients
Resqinit[(Kx+2),jtau]=1  #Arbitrary Initial value
}
View(Resqinit)
rmarkdown::render_site(encoding = “UTF-8”)
rmarkdown::render_site(encoding = “UTF-8”)
rmarkdown::render_site()
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
